amqp:
  admin:
    auto-create: false
  queues:
    video-created:
      exchange: video.events
      routing-key: video.created
      queue: video.created.queue
    video-encoded:
      exchange: video.events
      routing-key: video.encoded
      queue: video.encoded.queue

google:
  cloud:
    credentials: ${GOOGLE_CLOUD_CREDENTIALS:codeflix-419912}
    project-id: ${GOOGLE_CLOUD_PROJECT:ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiY29kZWZsaXgtNDE5OTEyIiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiNDMzMjBjMjk4N2VkMDcwOGJjOGRkYmUxZjYyN2Y5YmE5ZjYwYmNhNSIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZRSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRUFBb0lCQVFDZVhZbjhObmlvYTdXalxuQS9WRG5IYmNHaStWWXpaenVNQmkwRlUwamd0NlhDOXN5WTczT1FrZXpMRU5SYkVhclZHVVY2RXlhVkZWOVUrZVxuSUVaS0NKdlBIbGZienFxTElqa2RGV1h4MFhsNk9jQk54R2N2Vm1JeHo5MktMUkpjWEdYbDlVeVRhL2dUa0ovblxuV2dtUXg5N1N0QjkzcjhhYzNreXA2NDdDdWpycHh0S1c4UFU4TjBzWklzdmlzZGFDT1AyZFU2djZHdEdOU0RxVFxuRmtMWEc1bDFrbE5RdkJOUDBlRTNpejQxdGtPdUY2RlFGNys5dklKUnBRSlBJUTZJN1k3VHYzdlNObVZDSnlxTFxuaUNqSWtsb1h6eUthbCt1WEdLcVhQSFFnY2ViVTRwdGRDZ3JDL3FYa0h3UHhCVitQaHZMNklFb3VKUHJZTGlVVFxueFhwRlYwc2ZBZ01CQUFFQ2dnRUFBTzJEQzdOaEp5bFdsMWU5bC9KK1dUN1A3RHpQNEh5R0lSRndpOU1RbFAzdVxuMkpBbm9Meng2SzVXTllVNURqMDN0QWVSdG5USjYzWWE3YXhpMWt2aDRMOGdMdHJNYXZ0T2dQdk12YXpVM0t6c1xueUJIMVk0alJjYmQ1V3J6R3BuK09aVVV0dTdqWHZGT0FvamNIMHBRMnFNUEdIcFFzNUJKR0xKbTVSRHJqMEU5UlxuLzFteWVUa3hmZXpBTnh4bFBMMHZ6Y1R0QXpPME1tVFNUWUE3eFFNOUhnNzhjN1o4cndreStoUldiMlZHSWdVK1xuSFN5TkJSbXZmYWx5THpobldjWGxralV2RmNFQWxvYnJPUStHSmdtSzZnRk44RjNueS8zeGIwei9hb0NwdVJqbVxuK0JnZkw3OTJLbWRIMkUvNWRPdGRDNkwvYWpGL1NwVTFvLzVBVVh1ejBRS0JnUURMNDZBbWhjZmRiUWt3UWV3SVxuME04d3FSZnozMjRrcGc0WVl6YlN0SmJBS1ZDNkFPS0lrcnRmVGdNdXRTUnhaaTYrbGE2RzNxdCtrdW9wZUpOOFxuWjhMdS9GZDdxTEc3eXh6MVpWTVhhSUdidnNlcE1hNUtZMVBwNWpDQURpVHZZYnFqRHFZRlU3VXNrM2FwSkZEWFxuNEVzLzd3VzJ2R1BxcklZZmluREtMVURkMlFLQmdRREcxMUJMRURhcHZmbktkcVB6NDZud1VsSTM5MktUSm55WFxuTGx0ek8vMlY3cnhjOFdMZ0ZmdzI4YjUyT0hBWWxlRnROTXFtYXNwdmRVREsyUnZPWHZDWTlydFRYM2VwQ3JqalxudHBJOVNhdjBoREFMSDJScUkrZVloZ1FBTWh5clVZcXRFZmlPWWVmZWVMZHJVWjJnejdWYWdUdEliZlBlcS9pNVxuejk1azBudzl0d0tCZ0MreUVRM1I3OTVSbW51cWdDL1R3UlF1Q2tkbmRobW1xdGR6cGlpR1RGbXBrSlBpanh2SlxuejRGTSs1dWFqbXJrcjN5d0FVTFZwaUtXOWFZNzZheUpqV1ZncklwbC9TWGtMdU1ORC9JQzVZYnNpMEorTjdwNVxuSC9Fd2d4b0J0UXcydlhWVmdPcndHUXJUZUVlN0VocGVBdHh5NnRCRG85QUxDZGtwQnBlVkhINkpBb0dCQUxteFxuREQvOWRUOFJ0anZZamdaT256NWFjb1BubUh3WlhoTUZiTXZ4dzBFSXdZbit0enJUN1VVV2Y2c0J5OVY1NnhyRVxuU1ZnZXRNeGY4TkUrN2RQTkg5MkoxYWpucCtVS3FWMm0rMjBXNXVvanBJWk9tOFR2b1BIMGZibjlFbjcvV0lXR1xuR2R4R0hIYkx2MmNPd2lrU3NLZER0cXhPV29laGpGZGlnNnNlVW42REFvR0FVSDFablhwT2Q1ZnFzUkFhMzJ4VFxueEdPZFEzdTdCRlkvSW9HdDNBS1dpYmx6RjBoK2Qrd0crNjgzUUlxSXVUK05qeHpuMDQ1ZFcxNGpYdk44cDFSL1xuS3Vjbkl3NTNyM1AvNi8rSGx4N2RxWFpEL3ltR1N6SFB4UFdpMXRHQ3p6YWZva3Q4bXRmTUY2elRnQjUyc1pMWVxuQTRJT3VVVUxtZ0VhRWczVEdqSTA2Tkk9XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAibXMtYWRtaW4tY2F0YWxvZ29AY29kZWZsaXgtNDE5OTEyLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjEwNjI5MTk2MTEyOTE3NzE5NjYwMyIsCiAgImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwKICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvbXMtYWRtaW4tY2F0YWxvZ28lNDBjb2RlZmxpeC00MTk5MTIuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0K}
    storage:
      catalogo-videos:
        bucket: catalogo_videos_estudo
        connect-timeout: 250
        read-timeout: 5000
        retry-delay: 50
        retry-max-delay: 50
        retry-max-attempts: 2
        retry-multiplier: 1.0

server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true # Whether response compression is enabled.
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json # Comma-separated list of MIME types that should be compressed.
    min-response-size: 1024 # Minimum "Content-Length" value that is required for compression to be performed.
  undertow:
    threads:
      worker: 64 # Generally this should be reasonably high, at least 10 per CPU core: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2
      io: 4 # One IO thread per CPU core is a reasonable default: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2

spring:
  datasource:
    url: jdbc:mysql://${mysql.url:localhost:3306}/${mysql.schema:adm_videos}?useSSL=true&serverTimezone=UTC&characterEncoding=UTF-8
    username: ${mysql.username:root}
    password: ${mysql.password:123456}
    hikari:
      auto-commit: false
      connection-timeout: 250 # É uma configuração em milliseconds. O ideal é manter baixo para que estoure timeout logo e não prenda as threads.
      max-lifetime: 600000 # Tempo máximo que uma conexão pode ficar aberta (10 min) - security.
      maximum-pool-size: 20 # Mantemos até no máx 20 conexões com o banco de dados. O ideal é manter baixo mesmo, pois é algo custoso para o banco gerenciar. https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
      minimum-idle: 10
      pool-name: master
  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      "[hibernate.dialect]": org.hibernate.dialect.MySQL5InnoDBDialect
      "[hibernate.generate_statistics]": false
      "[hibernate.connection.provider_disables_autocommit]": true
      # Para aumentar a performance ao máximo, desabilitamos o auto-commit e o open-in-view.
      # https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
  rabbitmq:
    dynamic: ${amqp.admin.auto-create}
    host: ${amqp.host}
    port: ${amqp.port}
    username: ${amqp.username}
    password: ${amqp.password}
  servlet:
    multipart:
      max-file-size: 10GB # Max file size.
      max-request-size: 100GB # Max request size.
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/certs
          issuer-uri: ${keycloak.host}/realms/${keycloak.realm}

storage:
  catalogo-videos:
    filename-pattern: type-{type}
    location-pattern: videoId-{videoId}
